,text,starcoderbase-1b_PPL,ZLIB,starcoderbase-3b_PPL
436,"
    }
}
",8.006609916687012,15,21.316774368286133
613,"
## 1834


```shloka-sa

पु रूक स्त्रिश्वि याच स्वस्थियत् ।
पु रूक स्त्रिश्वि याच स्वच्घन्ति ।
स्राष्ट म्हिष्य स्यातत् और स्त्रोहा ॥ २९ ॥

```
```shloka-sa-hk

pu raK kaSTvI yAku vAS stHuvitH |
pu raK kaSTvI yAku vAS nahvitNa |
sa rAsI mudhi sa yaTAt tAra taNVh |
sa rAsI mudhi sa yaTAt tAra tavNgh |

```
`याच` `[y",3.700672626495361,260,9.971257209777832
618,"#
# This file is autogenerated from the ietf-inet-topo model.
# Do not edit.
#
# Generated from module ietf-inet-topo using ietfjson version 2.25.0.
#

import os
import re

import genie.conf as conf
from genie.conf.base.base import Config

class topoConfig(Config):
    '''
    No description provided.
    '''

    def __init__(self, **kwargs):
        super().__init__(**kwargs)
        self._path = os.path.join(conf.get_config_dir(), ""ietf"", ""topo"")
        self._yangmodule = ""ietf-inet-topo""

    def _load(self, filter=glob):
        configs = {}

        loadpath = [self._path]
        for path in loadpath:
            for filename in sorted(filter(os.path.exists, os.listdir(path))):
                file_path = os.path.join(path, filename)
                with open(file_path, ""rb"") as handle:
                    m = re.search('ietf-inet-topo\(config\)', handle.read",2.5817172527313232,423,5.379029750823975
893,"{
		s_func();
	}
}
",9.11155605316162,27,22.01085662841797
1050,"
    public function __toString() : string
    {
        return sprintf(""%s(%s)"", static::getCallerClass(self::class), basename(
            $this->getCallFile()
        ));
    }
}
",5.051663875579834,139,16.658491134643555
1415,"
    }
}
",8.006609916687012,15,21.31678009033203
2344,"(x)
     (let* ((i (index (x)))
            (len (len (x)))
            (p (if (not i)
                    (throw 'no-pointer () `((:x, x) (:i, i) (:len, len)))))
            (k (car p)))
       k)))
",6.032217025756836,113,14.7642183303833
2502," * The License will also include the following:
 *  ""As used in the Licensor's name, this App may not be combined
 *  with, deployed as-is or dissembled as part of another commercial
 *  product, without the prior written consent of the Licensor.""
 *
 *  Where the App includes third-party Open Source libraries, the
 *  License Agreement for those libraries must be made available in
 *  the project documentation as well.
 *
 *  THIS APP AND ALL ITS PARTS COULD BE USED ONLY AS A SUBSTANTIAL
 *  PART OF AN OPEN SOURCE APPLICATION WITHOUT THE EXPRESS WRITTEN
 *  CONSENT OF THE DEVELOPER OR ORGANIZATION THAT HAS COPIED THIS
 *  LICENSE AGREEMENT AND THE APPLICATION INCLUDED WITH IT.  IF THE
 *  DEVELOPER COPIES THE LICENSE AGREEMENT AND INCLUDES IT IN THE
 *  APPLICATION, THIS APP IS PROVIDED UNDER THAT LICENSE AGREEMENT
 *  INSTEAD OF THE TERMS AND CONDITIONS OF THE OPEN SOURCE APPLICATION.  nseException e)
  {
    final ByteArrayOutputStream buff = new ByteArrayOutputStream(1",3.822493314743042,547,11.758583068847656
2515,"#include ""ui/views/menu/menu_item.h""

#include <utility>
#include <vector>

#endif  // UI_VIEWS_MENU_MENU_ITEM_H_

// vim: foldmethod=marker
// endc",2.59789514541626,128,5.410240173339844
3121,"name_2: ""B""
argument_2: 1
return_type: 
method_type: 
comments:
-!!python/name: str
  value: This function should always fail with an exception.
-!!python/name: str
  value: B is not a valid method name.
",4.150883674621582,140,11.021994590759276
3128,"-  _________________________ __________________  __
 *                \   _  \              /\_   _____/  |  \
 *                   \  \_\  \             |   |  \__ \   |   \
 *                    \ \____   /\____    |___|  / __ \  |___|
 *                     \/_____/    \/     \/      \/   \/            \/
 *
 *
 *             MPEG Transport Stream Library - Version 2
 *
 *
 *                    Copyright (c) 2011-2020 B.A.Mankind
 *                                All rights reserved.
 *
 *  This software remains the confidential and proprietary information
 *  of B.A.Mankind (""Confidential Information"").  You shall not
 *  disclose such Confidential Information and shall use its
 *  responsibility and obligations only in accordance with
 *  applicable law, statutory rules and regulations as
 *  applicable, including but not limited to, the law of the
 *  jurisdiction where such Confidential Information is located.
 *  No part of this Confidential Information shall be reproduced,
 *  copied",2.614708662033081,436,9.498808860778809
3229,"p_005fparam_005f1_reused);
    if (tmpVar) {
      return ((java.lang.String) (((javax.servlet.jsp.tagext.DynamicElEvaluator.Result) (tmpVar)).getValue((javax.servlet.jsp.tagext.DynamicTag) _jspx_tag_pool_c_set_name_value_nobody)));
    }
    _jspx_tag_source = ""C:/Users/hp/Downloads/JSP/spring12/_jsp/head.jsp"";
    _jspx_tag_dir = """";
    _jspx_tag_base = _jspx_page_context.getRequest().getContextPath();
    __jspx_tag_resources_1.add((new org.apache.jasper.runtime.JspResourceInfo(this,""<%@taglib prefix=\""fmt\"" uri=\""java.fmt\"" %>"",""/WEB-INF/views/include/taglib.jsp"",314,16,true,false)).setLast modified());
    __jspx_tag_resources_1.add((new org.apache.jasper.runtime.JspResourceInfo(this,""javax.servlet.jsp.jstl.fmt.Bundle",2.5729990005493164,409,7.509662628173828
3637,"// ---------------------------------------------------------------------
// Bright ID Server - Client API
// (c) 2021 - 2022 Bright ID Solutions AS. All rights reserved.
//
// Bright ID Server makes it possible to authenticate users with external services.
// From typical SAML2-Based external services, like Okta, OAuth2-, OpenID Connect etc.,
// Bright ID Server receives authentication information and uses it to validate the user's authentication,
// with an OAuth2- or OpenID Connect-like authentication scheme.
//
// The specific format of the authentication information is up-to the external service consumer.
// It can be something like:
// ""client_id"": ""CLIENT_ID_HERE"",
// ""access_token"": ""ACCESS_TOKEN_HERE"",
/// ""scope"": ""openid profile"",
/// ""expires_in"": 3600,
/// ""id_token"": ""ID_TOKEN_HERE""
//----------------------------------------------------------------------

package brightid

import (
	""encoding/base64""
	""fmt""
	""log""
	""net/http""

	""golang.org/x/oauth2",3.02529239654541,467,7.169931411743164
4000,"

/**
 * 103. Remove Invalid Parentheses
,
            [
                ['(', '(', ')'],
                ['(', '(', ')']
            ],
            3
        );
    });
 * https://leetcode.com/problems/remove-invalid-parentheses/
 * Difficulty: Easy
 *
 * Given a string s of open and closed parentheses, remove all invalid parentheses.  An invalid parenthesis is either not a ( or ), or the same character repeated 3 or more times.
 *
 * In the case that s = ""()()"", you should return ""()()"".
 *
 * Example 1:
 * Input: s = ""()())""
 * Output: ""()""
 * Explanation: There are no invalid parentheses.
 * Example 2:
 * Input: s = ""()((""
 * Output: ""()""
 * Explanation: The first invalid parentheses is ""("", but it has already been validated. Therefore, it is invalid.
 *
 * Example 3:
 * Input: s = ""(()(()(()())""
 * Output: """"
 * Explanation: All of the invalid parentheses, including the second redundant parentheses, have been removed. Therefore,",2.6977977752685547,426,5.980090141296387
4003,"<commit_before>fix typos#!/bin/bash

# This script sets the password for MySQL
# TODO: check input

# mysql admin password set up 
/opt/bitnami/mysql/bin/mysql_secure_installation << EOF
# This installation is meant for MySQL (and possibly other MySQL-based
# products), AKA 'MariaDB', which is not currently the default database
# engine for MySQL Server.

# Remove anonymous users, so that remote connections work without
# ""root"" password.  Additionally, test if we are allowed to test
# the system variable ""tmpdir""

# Allow only root to connect.
[client]
    report_host = localhost
    grant-tables = true


# For password authentication, let MySQL auto-generate a random password.
# By default, MySQL will set the password to an empty string.

# If you prefer using a specific password, you can set it here.

# Add/Remove users and databases here.

# To add a new user, run the following:
#
#    $ mysql_secure_add_user --user=user --host=localhost --password",5.206568241119385,553,10.841402053833008
4284,": IConfigurationRoot<AppSettings> {
    constructor(private env: string) {}

    /** Loads the app settings. */
    public load(): AppSettings {
        return yaml.load(path.resolve(this.env, `appSettings.${this.env}.yaml`));
    } 
}
",4.067202091217041,171,9.159456253051758
4475,"{
        return this.value;
    };
    return Node;
}(Component1));
",9.861742973327637,57,19.80043601989746
4671,": String,
    val id: String,
    val userId: String
)
",5.88069486618042,39,23.18661499023437
4719,"{
            get {
                if ((this.target == null)) {
                    this.target = new IsoDateTimeConverter();
                    ((IsoDateTimeConverter)(this.target)).ConvertEmptyStringToNullWhenNullTrue = false;
                }
                return this.target;
            }
        }
    }
}
",3.419992446899414,149,7.675386905670166
